import type { AISpanRecord, AITraceRecord } from '../../storage/index.js';
import type { ScorerRunInputForAgent, ScorerRunOutputForAgent } from '../types.js';
interface SpanTree {
    spanMap: Map<string, AISpanRecord>;
    childrenMap: Map<string, AISpanRecord[]>;
    rootSpans: AISpanRecord[];
}
/**
 * Build a hierarchical span tree with efficient lookup maps
 */
export declare function buildSpanTree(spans: AISpanRecord[]): SpanTree;
/**
 * Validate trace structure and throw descriptive errors
 */
export declare function validateTrace(trace: AITraceRecord): void;
/**
 * Transform trace to scorer input format
 */
export declare function transformTraceToScorerInput(trace: AITraceRecord): ScorerRunInputForAgent;
/**
 * Transform trace to scorer output format
 */
export declare function transformTraceToScorerOutput(trace: AITraceRecord): ScorerRunOutputForAgent;
export {};
//# sourceMappingURL=utils.d.ts.map