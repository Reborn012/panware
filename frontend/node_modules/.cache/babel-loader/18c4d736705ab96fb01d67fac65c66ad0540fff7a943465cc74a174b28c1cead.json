{"ast":null,"code":"var _jsxFileName = \"D:\\\\Summer Projects\\\\panware\\\\frontend\\\\src\\\\components\\\\MedicalScatterChart.js\";\nimport React from 'react';\nimport { TrendingUp, TrendingDown, Activity, AlertTriangle } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MedicalScatterChart = ({\n  labResults,\n  title = \"Lab Results vs Normal Ranges\"\n}) => {\n  if (!labResults || labResults.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-xl p-6 shadow-sm border border-stone-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-4\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-8 text-gray-500\",\n        children: [/*#__PURE__*/_jsxDEV(Activity, {\n          className: \"w-12 h-12 mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No lab results available for chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Process lab results to extract values and ranges\n  const processedData = labResults.map((lab, index) => {\n    let patientValue = 0;\n    let normalMin = 0;\n    let normalMax = 0;\n    let status = 'normal';\n\n    // Extract patient value\n    if (typeof lab.value === 'string') {\n      patientValue = parseFloat(lab.value.replace(/[^\\d.-]/g, '')) || 0;\n    } else {\n      patientValue = lab.value || 0;\n    }\n\n    // Extract normal range\n    if (lab.normalRange) {\n      const rangeMatch = lab.normalRange.match(/(\\d+\\.?\\d*)\\s*[-â€“]\\s*(\\d+\\.?\\d*)/);\n      if (rangeMatch) {\n        normalMin = parseFloat(rangeMatch[1]);\n        normalMax = parseFloat(rangeMatch[2]);\n      } else {\n        // Try to extract single threshold (e.g., \"<37\")\n        const singleMatch = lab.normalRange.match(/[<>]?\\s*(\\d+\\.?\\d*)/);\n        if (singleMatch) {\n          const value = parseFloat(singleMatch[1]);\n          if (lab.normalRange.includes('<')) {\n            normalMin = 0;\n            normalMax = value;\n          } else {\n            normalMin = value;\n            normalMax = value * 2; // Approximate upper bound\n          }\n        }\n      }\n    }\n\n    // Determine status\n    if (normalMin > 0 && normalMax > 0) {\n      if (patientValue < normalMin) {\n        status = 'low';\n      } else if (patientValue > normalMax) {\n        status = 'high';\n      } else {\n        status = 'normal';\n      }\n    }\n    return {\n      name: lab.name || lab.test || `Test ${index + 1}`,\n      patientValue,\n      normalMin,\n      normalMax,\n      normalMid: (normalMin + normalMax) / 2,\n      status,\n      unit: lab.unit || ''\n    };\n  }).filter(item => item.normalMin > 0 || item.normalMax > 0); // Only include items with ranges\n\n  if (processedData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-xl p-6 shadow-sm border border-stone-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-4\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-8 text-gray-500\",\n        children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n          className: \"w-12 h-12 mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Unable to extract normal ranges from lab results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Calculate chart dimensions\n  const chartWidth = 600;\n  const chartHeight = 400;\n  const padding = 60;\n  const plotWidth = chartWidth - padding * 2;\n  const plotHeight = chartHeight - padding * 2;\n\n  // Find min and max values for scaling\n  const allValues = processedData.flatMap(item => [item.patientValue, item.normalMin, item.normalMax]);\n  const minValue = Math.min(...allValues) * 0.8;\n  const maxValue = Math.max(...allValues) * 1.2;\n  const valueRange = maxValue - minValue;\n\n  // Create scales\n  const xScale = index => padding + index * (plotWidth / (processedData.length - 1));\n  const yScale = value => chartHeight - padding - (value - minValue) / valueRange * plotHeight;\n  const getStatusColor = status => {\n    switch (status) {\n      case 'high':\n        return '#ef4444';\n      case 'low':\n        return '#f59e0b';\n      default:\n        return '#10b981';\n    }\n  };\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'high':\n        return /*#__PURE__*/_jsxDEV(TrendingUp, {\n          className: \"w-4 h-4\",\n          style: {\n            color: '#ef4444'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 27\n        }, this);\n      case 'low':\n        return /*#__PURE__*/_jsxDEV(TrendingDown, {\n          className: \"w-4 h-4\",\n          style: {\n            color: '#f59e0b'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 26\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Activity, {\n          className: \"w-4 h-4\",\n          style: {\n            color: '#10b981'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 23\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gradient-to-br from-white to-purple-50 rounded-xl p-6 shadow-lg border border-purple-200\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center gap-3 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-10 h-10 bg-gradient-to-br from-purple-500 to-indigo-600 rounded-lg flex items-center justify-center shadow-md\",\n        children: /*#__PURE__*/_jsxDEV(Activity, {\n          className: \"w-5 h-5 text-white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold text-stone-900\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-stone-600\",\n          children: \"Interactive visualization of patient values vs normal ranges\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 bg-white rounded-lg p-4 shadow-inner\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: chartWidth,\n        height: chartHeight,\n        className: \"border border-gray-200 rounded-lg bg-gradient-to-b from-gray-50 to-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n          children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n            id: \"chartBackground\",\n            x1: \"0%\",\n            y1: \"0%\",\n            x2: \"0%\",\n            y2: \"100%\",\n            children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"0%\",\n              stopColor: \"#f8fafc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"100%\",\n              stopColor: \"#ffffff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n          width: chartWidth,\n          height: chartHeight,\n          fill: \"url(#chartBackground)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), [0, 0.25, 0.5, 0.75, 1].map(fraction => {\n          const y = padding + fraction * plotHeight;\n          const value = minValue + (1 - fraction) * valueRange;\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [/*#__PURE__*/_jsxDEV(\"line\", {\n              x1: padding,\n              y1: y,\n              x2: chartWidth - padding,\n              y2: y,\n              stroke: \"#e5e7eb\",\n              strokeDasharray: \"3,3\",\n              strokeWidth: fraction === 0.5 ? 2 : 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: padding - 15,\n              y: y + 4,\n              textAnchor: \"end\",\n              fontSize: \"10\",\n              fontWeight: \"500\",\n              fill: \"#6b7280\",\n              children: value.toFixed(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this)]\n          }, fraction, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this);\n        }), processedData.map((item, index) => {\n          const x = xScale(index);\n          const minY = yScale(item.normalMin);\n          const maxY = yScale(item.normalMax);\n          const barHeight = minY - maxY;\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n              x: x - 20,\n              y: maxY,\n              width: 40,\n              height: barHeight,\n              fill: \"#dcfce7\",\n              fillOpacity: 0.6,\n              stroke: \"#16a34a\",\n              strokeWidth: 1,\n              strokeOpacity: 0.4,\n              rx: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: x,\n              y: maxY - 8,\n              textAnchor: \"middle\",\n              fontSize: \"8\",\n              fill: \"#16a34a\",\n              fontWeight: \"600\",\n              children: item.normalMax.toFixed(0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: x,\n              y: minY + 15,\n              textAnchor: \"middle\",\n              fontSize: \"8\",\n              fill: \"#16a34a\",\n              fontWeight: \"600\",\n              children: item.normalMin.toFixed(0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)]\n          }, `range-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this);\n        }), processedData.map((item, index) => {\n          const x = xScale(index);\n          const y = yScale(item.patientValue);\n          const color = getStatusColor(item.status);\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: x,\n              cy: y,\n              r: 10,\n              fill: color,\n              fillOpacity: 0.2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: x,\n              cy: y,\n              r: 7,\n              fill: color,\n              stroke: \"white\",\n              strokeWidth: 3,\n              filter: \"drop-shadow(0 2px 4px rgba(0,0,0,0.1))\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n              x: x - 15,\n              y: y - 25,\n              width: 30,\n              height: 16,\n              fill: \"white\",\n              stroke: color,\n              strokeWidth: 1,\n              rx: 8,\n              fillOpacity: 0.9\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: x,\n              y: y - 15,\n              textAnchor: \"middle\",\n              fontSize: \"10\",\n              fontWeight: \"bold\",\n              fill: color,\n              children: item.patientValue.toFixed(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this)]\n          }, `point-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this);\n        }), processedData.map((item, index) => {\n          const x = xScale(index);\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n              x: x - 25,\n              y: chartHeight - padding + 15,\n              width: 50,\n              height: 20,\n              fill: \"white\",\n              fillOpacity: 0.8,\n              rx: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: x,\n              y: chartHeight - padding + 27,\n              textAnchor: \"middle\",\n              fontSize: \"9\",\n              fontWeight: \"600\",\n              fill: \"#374151\",\n              children: item.name.length > 10 ? item.name.substring(0, 10) + '...' : item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this)]\n          }, `label-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: chartWidth / 2,\n          y: 25,\n          textAnchor: \"middle\",\n          fontSize: \"16\",\n          fontWeight: \"bold\",\n          fill: \"#111827\",\n          children: \"Patient Values vs Normal Ranges\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: 30,\n          y: chartHeight / 2,\n          textAnchor: \"middle\",\n          fontSize: \"12\",\n          fontWeight: \"600\",\n          fill: \"#6b7280\",\n          transform: `rotate(-90, 30, ${chartHeight / 2})`,\n          children: \"Lab Values\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-4 h-4 bg-green-100 border border-green-400 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-700\",\n          children: \"Normal Range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-3 h-3 bg-green-500 rounded-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-700\",\n          children: \"Normal Values\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-3 h-3 bg-red-500 rounded-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-700\",\n          children: \"High Values\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium text-gray-900\",\n        children: \"Test Results Summary:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-3\",\n        children: processedData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between p-2 bg-gray-50 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2\",\n            children: [getStatusIcon(item.status), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm font-medium\",\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm font-bold\",\n              style: {\n                color: getStatusColor(item.status)\n              },\n              children: [item.patientValue.toFixed(1), \" \", item.unit]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500\",\n              children: [\"Normal: \", item.normalMin.toFixed(1), \"-\", item.normalMax.toFixed(1)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_c = MedicalScatterChart;\nexport default MedicalScatterChart;\nvar _c;\n$RefreshReg$(_c, \"MedicalScatterChart\");","map":{"version":3,"names":["React","TrendingUp","TrendingDown","Activity","AlertTriangle","jsxDEV","_jsxDEV","MedicalScatterChart","labResults","title","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","processedData","map","lab","index","patientValue","normalMin","normalMax","status","value","parseFloat","replace","normalRange","rangeMatch","match","singleMatch","includes","name","test","normalMid","unit","filter","item","chartWidth","chartHeight","padding","plotWidth","plotHeight","allValues","flatMap","minValue","Math","min","maxValue","max","valueRange","xScale","yScale","getStatusColor","getStatusIcon","style","color","width","height","id","x1","y1","x2","y2","offset","stopColor","fill","fraction","y","stroke","strokeDasharray","strokeWidth","x","textAnchor","fontSize","fontWeight","toFixed","minY","maxY","barHeight","fillOpacity","strokeOpacity","rx","cx","cy","r","substring","transform","_c","$RefreshReg$"],"sources":["D:/Summer Projects/panware/frontend/src/components/MedicalScatterChart.js"],"sourcesContent":["import React from 'react';\r\nimport { TrendingUp, TrendingDown, Activity, AlertTriangle } from 'lucide-react';\r\n\r\nconst MedicalScatterChart = ({ labResults, title = \"Lab Results vs Normal Ranges\" }) => {\r\n  if (!labResults || labResults.length === 0) {\r\n    return (\r\n      <div className=\"bg-white rounded-xl p-6 shadow-sm border border-stone-200\">\r\n        <h3 className=\"text-lg font-semibold mb-4\">{title}</h3>\r\n        <div className=\"text-center py-8 text-gray-500\">\r\n          <Activity className=\"w-12 h-12 mx-auto mb-4\" />\r\n          <p>No lab results available for chart</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Process lab results to extract values and ranges\r\n  const processedData = labResults.map((lab, index) => {\r\n    let patientValue = 0;\r\n    let normalMin = 0;\r\n    let normalMax = 0;\r\n    let status = 'normal';\r\n\r\n    // Extract patient value\r\n    if (typeof lab.value === 'string') {\r\n      patientValue = parseFloat(lab.value.replace(/[^\\d.-]/g, '')) || 0;\r\n    } else {\r\n      patientValue = lab.value || 0;\r\n    }\r\n\r\n    // Extract normal range\r\n    if (lab.normalRange) {\r\n      const rangeMatch = lab.normalRange.match(/(\\d+\\.?\\d*)\\s*[-â€“]\\s*(\\d+\\.?\\d*)/);\r\n      if (rangeMatch) {\r\n        normalMin = parseFloat(rangeMatch[1]);\r\n        normalMax = parseFloat(rangeMatch[2]);\r\n      } else {\r\n        // Try to extract single threshold (e.g., \"<37\")\r\n        const singleMatch = lab.normalRange.match(/[<>]?\\s*(\\d+\\.?\\d*)/);\r\n        if (singleMatch) {\r\n          const value = parseFloat(singleMatch[1]);\r\n          if (lab.normalRange.includes('<')) {\r\n            normalMin = 0;\r\n            normalMax = value;\r\n          } else {\r\n            normalMin = value;\r\n            normalMax = value * 2; // Approximate upper bound\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Determine status\r\n    if (normalMin > 0 && normalMax > 0) {\r\n      if (patientValue < normalMin) {\r\n        status = 'low';\r\n      } else if (patientValue > normalMax) {\r\n        status = 'high';\r\n      } else {\r\n        status = 'normal';\r\n      }\r\n    }\r\n\r\n    return {\r\n      name: lab.name || lab.test || `Test ${index + 1}`,\r\n      patientValue,\r\n      normalMin,\r\n      normalMax,\r\n      normalMid: (normalMin + normalMax) / 2,\r\n      status,\r\n      unit: lab.unit || ''\r\n    };\r\n  }).filter(item => item.normalMin > 0 || item.normalMax > 0); // Only include items with ranges\r\n\r\n  if (processedData.length === 0) {\r\n    return (\r\n      <div className=\"bg-white rounded-xl p-6 shadow-sm border border-stone-200\">\r\n        <h3 className=\"text-lg font-semibold mb-4\">{title}</h3>\r\n        <div className=\"text-center py-8 text-gray-500\">\r\n          <AlertTriangle className=\"w-12 h-12 mx-auto mb-4\" />\r\n          <p>Unable to extract normal ranges from lab results</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Calculate chart dimensions\r\n  const chartWidth = 600;\r\n  const chartHeight = 400;\r\n  const padding = 60;\r\n  const plotWidth = chartWidth - (padding * 2);\r\n  const plotHeight = chartHeight - (padding * 2);\r\n\r\n  // Find min and max values for scaling\r\n  const allValues = processedData.flatMap(item => [\r\n    item.patientValue,\r\n    item.normalMin,\r\n    item.normalMax\r\n  ]);\r\n  const minValue = Math.min(...allValues) * 0.8;\r\n  const maxValue = Math.max(...allValues) * 1.2;\r\n  const valueRange = maxValue - minValue;\r\n\r\n  // Create scales\r\n  const xScale = (index) => padding + (index * (plotWidth / (processedData.length - 1)));\r\n  const yScale = (value) => chartHeight - padding - ((value - minValue) / valueRange) * plotHeight;\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'high': return '#ef4444';\r\n      case 'low': return '#f59e0b';\r\n      default: return '#10b981';\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status) => {\r\n    switch (status) {\r\n      case 'high': return <TrendingUp className=\"w-4 h-4\" style={{color: '#ef4444'}} />;\r\n      case 'low': return <TrendingDown className=\"w-4 h-4\" style={{color: '#f59e0b'}} />;\r\n      default: return <Activity className=\"w-4 h-4\" style={{color: '#10b981'}} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gradient-to-br from-white to-purple-50 rounded-xl p-6 shadow-lg border border-purple-200\">\r\n      <div className=\"flex items-center gap-3 mb-6\">\r\n        <div className=\"w-10 h-10 bg-gradient-to-br from-purple-500 to-indigo-600 rounded-lg flex items-center justify-center shadow-md\">\r\n          <Activity className=\"w-5 h-5 text-white\" />\r\n        </div>\r\n        <div>\r\n          <h3 className=\"text-xl font-bold text-stone-900\">{title}</h3>\r\n          <p className=\"text-sm text-stone-600\">Interactive visualization of patient values vs normal ranges</p>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Chart */}\r\n      <div className=\"mb-6 bg-white rounded-lg p-4 shadow-inner\">\r\n        <svg width={chartWidth} height={chartHeight} className=\"border border-gray-200 rounded-lg bg-gradient-to-b from-gray-50 to-white\">\r\n          {/* Background */}\r\n          <defs>\r\n            <linearGradient id=\"chartBackground\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\r\n              <stop offset=\"0%\" stopColor=\"#f8fafc\" />\r\n              <stop offset=\"100%\" stopColor=\"#ffffff\" />\r\n            </linearGradient>\r\n          </defs>\r\n          <rect width={chartWidth} height={chartHeight} fill=\"url(#chartBackground)\" />\r\n          \r\n          {/* Grid lines */}\r\n          {[0, 0.25, 0.5, 0.75, 1].map(fraction => {\r\n            const y = padding + (fraction * plotHeight);\r\n            const value = minValue + (1 - fraction) * valueRange;\r\n            return (\r\n              <g key={fraction}>\r\n                <line\r\n                  x1={padding}\r\n                  y1={y}\r\n                  x2={chartWidth - padding}\r\n                  y2={y}\r\n                  stroke=\"#e5e7eb\"\r\n                  strokeDasharray=\"3,3\"\r\n                  strokeWidth={fraction === 0.5 ? 2 : 1}\r\n                />\r\n                <text\r\n                  x={padding - 15}\r\n                  y={y + 4}\r\n                  textAnchor=\"end\"\r\n                  fontSize=\"10\"\r\n                  fontWeight=\"500\"\r\n                  fill=\"#6b7280\"\r\n                >\r\n                  {value.toFixed(1)}\r\n                </text>\r\n              </g>\r\n            );\r\n          })}\r\n\r\n          {/* Normal ranges (background bars) */}\r\n          {processedData.map((item, index) => {\r\n            const x = xScale(index);\r\n            const minY = yScale(item.normalMin);\r\n            const maxY = yScale(item.normalMax);\r\n            const barHeight = minY - maxY;\r\n            \r\n            return (\r\n              <g key={`range-${index}`}>\r\n                <rect\r\n                  x={x - 20}\r\n                  y={maxY}\r\n                  width={40}\r\n                  height={barHeight}\r\n                  fill=\"#dcfce7\"\r\n                  fillOpacity={0.6}\r\n                  stroke=\"#16a34a\"\r\n                  strokeWidth={1}\r\n                  strokeOpacity={0.4}\r\n                  rx={4}\r\n                />\r\n                {/* Range labels */}\r\n                <text\r\n                  x={x}\r\n                  y={maxY - 8}\r\n                  textAnchor=\"middle\"\r\n                  fontSize=\"8\"\r\n                  fill=\"#16a34a\"\r\n                  fontWeight=\"600\"\r\n                >\r\n                  {item.normalMax.toFixed(0)}\r\n                </text>\r\n                <text\r\n                  x={x}\r\n                  y={minY + 15}\r\n                  textAnchor=\"middle\"\r\n                  fontSize=\"8\"\r\n                  fill=\"#16a34a\"\r\n                  fontWeight=\"600\"\r\n                >\r\n                  {item.normalMin.toFixed(0)}\r\n                </text>\r\n              </g>\r\n            );\r\n          })}\r\n\r\n          {/* Patient values (scatter points) */}\r\n          {processedData.map((item, index) => {\r\n            const x = xScale(index);\r\n            const y = yScale(item.patientValue);\r\n            const color = getStatusColor(item.status);\r\n            \r\n            return (\r\n              <g key={`point-${index}`}>\r\n                {/* Glow effect */}\r\n                <circle\r\n                  cx={x}\r\n                  cy={y}\r\n                  r={10}\r\n                  fill={color}\r\n                  fillOpacity={0.2}\r\n                />\r\n                <circle\r\n                  cx={x}\r\n                  cy={y}\r\n                  r={7}\r\n                  fill={color}\r\n                  stroke=\"white\"\r\n                  strokeWidth={3}\r\n                  filter=\"drop-shadow(0 2px 4px rgba(0,0,0,0.1))\"\r\n                />\r\n                {/* Value label with background */}\r\n                <rect\r\n                  x={x - 15}\r\n                  y={y - 25}\r\n                  width={30}\r\n                  height={16}\r\n                  fill=\"white\"\r\n                  stroke={color}\r\n                  strokeWidth={1}\r\n                  rx={8}\r\n                  fillOpacity={0.9}\r\n                />\r\n                <text\r\n                  x={x}\r\n                  y={y - 15}\r\n                  textAnchor=\"middle\"\r\n                  fontSize=\"10\"\r\n                  fontWeight=\"bold\"\r\n                  fill={color}\r\n                >\r\n                  {item.patientValue.toFixed(1)}\r\n                </text>\r\n              </g>\r\n            );\r\n          })}\r\n\r\n          {/* X-axis labels */}\r\n          {processedData.map((item, index) => {\r\n            const x = xScale(index);\r\n            return (\r\n              <g key={`label-${index}`}>\r\n                <rect\r\n                  x={x - 25}\r\n                  y={chartHeight - padding + 15}\r\n                  width={50}\r\n                  height={20}\r\n                  fill=\"white\"\r\n                  fillOpacity={0.8}\r\n                  rx={4}\r\n                />\r\n                <text\r\n                  x={x}\r\n                  y={chartHeight - padding + 27}\r\n                  textAnchor=\"middle\"\r\n                  fontSize=\"9\"\r\n                  fontWeight=\"600\"\r\n                  fill=\"#374151\"\r\n                >\r\n                  {item.name.length > 10 ? item.name.substring(0, 10) + '...' : item.name}\r\n                </text>\r\n              </g>\r\n            );\r\n          })}\r\n\r\n          {/* Chart title and labels */}\r\n          <text\r\n            x={chartWidth / 2}\r\n            y={25}\r\n            textAnchor=\"middle\"\r\n            fontSize=\"16\"\r\n            fontWeight=\"bold\"\r\n            fill=\"#111827\"\r\n          >\r\n            Patient Values vs Normal Ranges\r\n          </text>\r\n          \r\n          <text\r\n            x={30}\r\n            y={chartHeight / 2}\r\n            textAnchor=\"middle\"\r\n            fontSize=\"12\"\r\n            fontWeight=\"600\"\r\n            fill=\"#6b7280\"\r\n            transform={`rotate(-90, 30, ${chartHeight / 2})`}\r\n          >\r\n            Lab Values\r\n          </text>\r\n        </svg>\r\n      </div>\r\n\r\n      {/* Legend */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\r\n        <div className=\"flex items-center gap-2\">\r\n          <div className=\"w-4 h-4 bg-green-100 border border-green-400 rounded\"></div>\r\n          <span className=\"text-sm text-gray-700\">Normal Range</span>\r\n        </div>\r\n        <div className=\"flex items-center gap-2\">\r\n          <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\r\n          <span className=\"text-sm text-gray-700\">Normal Values</span>\r\n        </div>\r\n        <div className=\"flex items-center gap-2\">\r\n          <div className=\"w-3 h-3 bg-red-500 rounded-full\"></div>\r\n          <span className=\"text-sm text-gray-700\">High Values</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Values Summary */}\r\n      <div className=\"space-y-2\">\r\n        <h4 className=\"font-medium text-gray-900\">Test Results Summary:</h4>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\r\n          {processedData.map((item, index) => (\r\n            <div key={index} className=\"flex items-center justify-between p-2 bg-gray-50 rounded-lg\">\r\n              <div className=\"flex items-center gap-2\">\r\n                {getStatusIcon(item.status)}\r\n                <span className=\"text-sm font-medium\">{item.name}</span>\r\n              </div>\r\n              <div className=\"text-right\">\r\n                <div className=\"text-sm font-bold\" style={{color: getStatusColor(item.status)}}>\r\n                  {item.patientValue.toFixed(1)} {item.unit}\r\n                </div>\r\n                <div className=\"text-xs text-gray-500\">\r\n                  Normal: {item.normalMin.toFixed(1)}-{item.normalMax.toFixed(1)}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicalScatterChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}