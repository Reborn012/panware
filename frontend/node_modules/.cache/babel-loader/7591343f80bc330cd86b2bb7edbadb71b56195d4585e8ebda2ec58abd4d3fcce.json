{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const apiService = {\n  async getPatients() {\n    const response = await api.get('/patients');\n    return response.data;\n  },\n  async getPatient(id) {\n    const response = await api.get(`/patients/${id}`);\n    return response.data;\n  },\n  async getRiskAssessment(patientData) {\n    const response = await api.post('/risk', patientData);\n    return response.data;\n  },\n  async getStudySummary(riskFactor) {\n    const response = await api.post('/study', {\n      risk_factor: riskFactor\n    });\n    return response.data;\n  },\n  async getQuestionnaire(chiefComplaint) {\n    const response = await api.post('/questionnaire', {\n      chief_complaint: chiefComplaint\n    });\n    return response.data;\n  },\n  async getInsuranceMapping(symptoms, recommendedAction) {\n    const response = await api.post('/insurance', {\n      symptoms,\n      recommended_action: recommendedAction\n    });\n    return response.data;\n  }\n};\nexport default apiService;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","apiService","getPatients","response","get","data","getPatient","id","getRiskAssessment","patientData","post","getStudySummary","riskFactor","risk_factor","getQuestionnaire","chiefComplaint","chief_complaint","getInsuranceMapping","symptoms","recommendedAction","recommended_action"],"sources":["D:/Summer Projects/panware/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:5000/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport const apiService = {\n  async getPatients() {\n    const response = await api.get('/patients');\n    return response.data;\n  },\n\n  async getPatient(id) {\n    const response = await api.get(`/patients/${id}`);\n    return response.data;\n  },\n\n  async getRiskAssessment(patientData) {\n    const response = await api.post('/risk', patientData);\n    return response.data;\n  },\n\n  async getStudySummary(riskFactor) {\n    const response = await api.post('/study', { risk_factor: riskFactor });\n    return response.data;\n  },\n\n  async getQuestionnaire(chiefComplaint) {\n    const response = await api.post('/questionnaire', { chief_complaint: chiefComplaint });\n    return response.data;\n  },\n\n  async getInsuranceMapping(symptoms, recommendedAction) {\n    const response = await api.post('/insurance', {\n      symptoms,\n      recommended_action: recommendedAction\n    });\n    return response.data;\n  }\n};\n\nexport default apiService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,UAAU,GAAG;EACxB,MAAMC,WAAWA,CAAA,EAAG;IAClB,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,WAAW,CAAC;IAC3C,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMC,UAAUA,CAACC,EAAE,EAAE;IACnB,MAAMJ,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,aAAaG,EAAE,EAAE,CAAC;IACjD,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMG,iBAAiBA,CAACC,WAAW,EAAE;IACnC,MAAMN,QAAQ,GAAG,MAAMN,GAAG,CAACa,IAAI,CAAC,OAAO,EAAED,WAAW,CAAC;IACrD,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMM,eAAeA,CAACC,UAAU,EAAE;IAChC,MAAMT,QAAQ,GAAG,MAAMN,GAAG,CAACa,IAAI,CAAC,QAAQ,EAAE;MAAEG,WAAW,EAAED;IAAW,CAAC,CAAC;IACtE,OAAOT,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMS,gBAAgBA,CAACC,cAAc,EAAE;IACrC,MAAMZ,QAAQ,GAAG,MAAMN,GAAG,CAACa,IAAI,CAAC,gBAAgB,EAAE;MAAEM,eAAe,EAAED;IAAe,CAAC,CAAC;IACtF,OAAOZ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMY,mBAAmBA,CAACC,QAAQ,EAAEC,iBAAiB,EAAE;IACrD,MAAMhB,QAAQ,GAAG,MAAMN,GAAG,CAACa,IAAI,CAAC,YAAY,EAAE;MAC5CQ,QAAQ;MACRE,kBAAkB,EAAED;IACtB,CAAC,CAAC;IACF,OAAOhB,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,eAAeJ,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}